@model EgyGuide.Models.ViewModels.OfferCreateVM
@inject EgyGuide.DataAccess.Data.ApplicationDbContext _db

@using EgyGuide.Utility
@{
    ViewData["Title"] = "Offered Details";
    ViewData["AddClassToBodyTag"] = "transparent-header with-multiple-sticky";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Model.TripDetail.MeetingDate = Model.TripDetail.MeetingDate.HasValue ? Model.TripDetail.MeetingDate : DateTime.Now;

    var guide = new Dictionary<string, string>();
    guide.Add("FirstName", Model.GuideUser.ApplicationUser.FirstName);
    guide.Add("LastName", Model.GuideUser.ApplicationUser.LastName);
    guide.Add("ImgSrc", Model.GuideUser.ApplicationUser.ImageUrl);
    guide.Add("ToursNo", _db.TripDetails.Count(t => t.GuideId == Model.GuideUser.Id).ToString());
    guide.Add("DateFrom", Model.TripDetail.MeetingDate.Value.ToString("dd/MMMM/yyyy"));
    guide.Add("DateTo", Model.TripDetail.MeetingDate.Value.AddDays(Model.TripDetail.Days).ToString("dd/MMMM/yyyy"));
    guide.Add("TripPrice", String.Format("{0:#.00}", Convert.ToDouble(Model.TripDetail.Price)));

}

<!-- start breadcrumb -->
<!-- For Details Pages -->

<div class="breadcrumb-image-bg detail-breadcrumb" style="background-image:url('images/detail-header.jpg');">
    <div class="container">
        <div class="page-title detail-header-02">
            <div class="row">
                <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">

                    <h2>@Model.TripDetail.Title</h2>
                    <span class="labeling text-white mt-25"><span>@Model.TripDetail.SelectedPlaces</span> <span>@Model.TripDetail.Days Days</span></span>
                </div>
            </div>
        </div>

        <div class="breadcrumb-wrapper text-left">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a asp-controller="Offered" asp-action="Index">Offered</a></li>
                <li class="active">@Model.City</li>
            </ol>
        </div>

    </div>
</div>
<!-- end breadcrumb -->

<div class="pt-30 pb-50">

    <div class="container">

        <div class="row">

            <div class="col-xs-12 col-sm-12 col-md-8">

                <div class="content-wrapper">

                    <div id="detail-content-sticky-nav-01">

                        <p class="lead"> @SD.StripHtml(Model.TripDetail.Description)</p>

                        <div class="bt mt-30 mb-30"></div>

                        <div class="featured-icon-simple-wrapper">

                            <div class="GridLex-gap-30">

                                <div class="GridLex-grid-noGutter-equalHeight">

                                    <div class="GridLex-col-4_sm-4_xs-12_xss-12">

                                        <div class="featured-icon-simple-item">
                                            <div class="icon text-primary">
                                                <i class="flaticon-travel-icons-suitcase-1"></i>
                                            </div>
                                            @Model.TripDetail.Days<br />tours
                                        </div>

                                    </div>

                                    <div class="GridLex-col-4_sm-4_xs-12_xss-12">

                                        <div class="featured-icon-simple-item">
                                            <div class="icon text-primary">
                                                <i class="flaticon-travel-icons-map"></i>
                                            </div>
                                            @{ string[] places = @Model.TripDetail.SelectedPlaces.Split(",");
                                                var count = places.Length; }
                                            Visit @count places:<br />@Model.TripDetail.SelectedPlaces
                                        </div>

                                    </div>

                                    <div class="GridLex-col-4_sm-4_xs-12_xss-12">

                                        <div class="featured-icon-simple-item">
                                            <div class="icon text-primary">
                                                <i class="flaticon-travel-icons-bus"></i>
                                            </div>
                                            Travel with a @Model.TripDetail.Transport  <br />
                                        </div>

                                    </div>

                                </div>

                            </div>

                        </div>

                        <div class="mb-25"></div>
                        <div class="bb"></div>
                        <div class="mb-25"></div>

                        <div class="featured-icon-simple-wrapper">

                            <div class="GridLex-gap-30 GridLex-gap-20-xs">

                                <div class="GridLex-grid-noGutter-equalHeight GridLex-grid-4_sm-4_xs-3_xss-1 GridLex-grid-center">

                                    @foreach (var style in Model.TripStyles)
                                    {

                                        <div class="GridLex-col">

                                            <div class="featured-icon-simple-item">
                                                <div class="icon">
                                                    <i class="flaticon-travel-icons-@style.ClassName"></i>
                                                </div>
                                                @style.StyleName
                                            </div>

                                        </div>
                                    }

                                </div>

                            </div>

                        </div>

                        <div class="mb-25"></div>
                        <div class="bb"></div>
                        <div class="mb-25"></div>

                        <div class="user-long-sm-item clearfix">

                            <div class="image">
                                <img src="@(guide["ImgSrc"])" alt="Images" />
                            </div>

                            <div class="content">
                                <span class="labeling">Offered by: </span>
                                <h4>@String.Format("{0} {1}", guide["FirstName"], guide["LastName"])</h4>
                                <ul class="user-meta">
                                    <li>@guide["ToursNo"] tours</li>
                                </ul>
                                <a href="guide-detail.html">view profile <i class="ion-android-arrow-forward"></i></a>
                            </div>

                        </div>

                        <div class="mb-25"></div>
                        <div class="bb"></div>
                        <div class="mb-25"></div>

                        <div class="row">

                            <div class="col-xs-12 col-sm-8 col-md-7">

                                <div class="featured-list-in-box">

                                    <h4 class="uppercase spacing-1">Trip Detail</h4>

                                    <ul class="clearfix">
                                        <li class="row gap-20">
                                            <div class="col-xs-12 col-sm-7">
                                                Meeting point (where we meet?)
                                            </div>
                                            <div class="col-xs-12 col-sm-5 text-primary text-right text-left-xs mt-xs space">
                                                <i class="ti-location-pin mr-5"></i> @Model.TripDetail.MeetingPlace
                                            </div>
                                        </li>
                                        <li class="row gap-20">
                                            <div class="col-xs-12 col-sm-7">
                                                Meeting time (what time we meet?)
                                            </div>

                                            <div class="col-xs-12 col-sm-5 text-primary text-right text-left-xs mt-xs space">
                                                <i class="ti-timer mr-5"></i> @(Model.TripDetail.MeetingDate.HasValue ? Model.TripDetail.MeetingDate.Value.ToString("hh:mm tt") : "<not available>")
                                            </div>
                                        </li>
                                        <li class="row gap-20">
                                            <div class="col-xs-12 col-sm-7">
                                                Maximum travellers
                                            </div>
                                            <div class="col-xs-12 col-sm-5 text-primary text-right text-left-xs mt-xs space">
                                                <i class="ti-user mr-5"></i> @Model.TripDetail.MaxTravellers
                                            </div>
                                        </li>
                                        <li class="row gap-20">
                                            <div class="col-xs-12 col-sm-7">
                                                Languages (guide speaks)
                                            </div>
                                            <div class="col-xs-12 col-sm-5 text-primary text-right text-left-xs mt-xs space">
                                                <i class="ti-flag mr-5"></i> @Model.TripDetail.SelectedLanguages
                                            </div>
                                        </li>
                                    </ul>

                                </div>

                            </div>

                            <div class="col-xs-12 col-sm-4 col-md-5 mt-20-xs">

                                <div class="pull-right pull-left-xs">
                                    <h4 class="text-uppercase spacing-1">What's included?</h4>

                                    <ul class="list-yes-no">
                                        @foreach (var included in Model.Included)
                                        {
                                            <li>@included.Title </li>

                                        }
                                    </ul>

                                    <h4 class="text-uppercase spacing-1">What's excluded?</h4>

                                    <ul class="list-yes-no">
                                        @foreach (var excluded in Model.Excluded)
                                        {
                                            <li>@excluded.Title </li>

                                        }
                                    </ul>
                                </div>

                            </div>

                        </div>

                        <div class="mb-25"></div>
                        <div class="bb"></div>
                        <div class="mb-25"></div>

                    </div>

                    <div id="detail-content-sticky-nav-02">

                        <h2 class="font-lg">Gallery</h2>

                        <div class="gallery-grid-3-2-wrapper mb-30">
                            <div id="gallery1"></div>
                        </div>

                        <div class="mb-25"></div>
                        <div class="bb"></div>
                        <div class="mb-25"></div>

                    </div>

                    <div id="detail-content-sticky-nav-03">

                        <h2 class="font-lg">Itinerary</h2>

                        <div class="itinerary-toggle-wrapper mb-40">

                            <div class="panel-group bootstrap-toggle">
                                @foreach (var day in Model.TripDaysDetail.Select((value, i) => (i, value)))
                                {
                                    <div class="panel">
                                        <div class="panel-heading">
                                            <div class="panel-title">
                                                <a data-toggle="collapse" data-parent="#" href="#bootstarp-toggle-@day.i-2">
                                                    <div class="itinerary-day">
                                                        Day
                                                        <span class="number">@day.value.DayNum </span>
                                                    </div>
                                                    <div class="itinerary-header">
                                                        <h4>@day.value.Title</h4>
                                                        <p class="font-md">@day.value.Remark</p>
                                                        <div class="image"><img src="@Model.TripDetail.CoverImageUrl" alt="images" /></div>
                                                    </div>
                                                </a>
                                            </div>
                                        </div>
                                        <div id="bootstarp-toggle-@day.i-2" class="panel-collapse collapse">
                                            <div class="panel-body">
                                                <p class="font-lg">@SD.StripHtml(day.value.Description). </p>
                                            </div>
                                        </div>

                                    </div>
                                }
                                <!-- end of panel -->


                            </div>

                        </div>

                        

                    </div>

                </div>

            </div>

            <div id="sidebar-sticky" class="col-xs-12 col-sm-12 col-md-4">

                <aside class="sidebar-wrapper with-box-shadow">

                    <div class="sidebar-booking-box mmt mt-30-sm">

                        <div class="sidebar-booking-header bg-primary clearfix">

                            <div class="price">
                                USD @guide["TripPrice"]
                            </div>

                            <div>
                                / trip
                            </div>

                        </div>

                        <div class="sidebar-booking-inner">

                            <div class="row gap-10">

                                <div class="col-xss-12 col-xs-6 col-sm-6">
                                    <div class="form-group">
                                        <label>From</label>
                                        <input id="tripDateFrom" type="text" value="@guide["DateFrom"]" class="form-control" disabled>
                                    </div>
                                </div>

                                <div class="col-xss-12 col-xs-6 col-sm-6">
                                    <div class="form-group">
                                        <label>To</label>
                                        <input id="tripDateTo" value="@guide["DateTo"]" class="form-control" disabled>
                                    </div>
                                </div>

                            </div>

                            <div class="row gap-20">

                                <div class="col-xss-12 col-xs-12 col-sm-12">
                                    <div class="form-group">
                                        <label>No. of travellers</label>
                                        <div class="form-group form-spin-group">
                                            <input id="noTravellers" data-max="@Model.TripDetail.MaxTravellers" type="text" class="form-control form-spin" value="1" />
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xss-12 col-xs-12 col-sm-12">
                                    <div class="mt-5">
                                        <a id="my-click" class="btn btn-primary btn-block">Request to Book</a>
                                    </div>
                                </div>

                            </div>

                            <div class="mt-10 text-center">
                                <p class="font-md text-muted font500 spacing-2">You won't yet be charged</p>
                            </div>

                        </div>

                    </div>

                    <div class="list-yes-no-box">
                        <ul>
                            <li>100% private</li>
                            <li>Instantly confirmed</li>
                            <li>Free cancellation</li>
                            <li>Satisfaction guarantee</li>
                        </ul>
                    </div>

                </aside>

            </div>

        </div>

    </div>

</div>

<div class="multiple-sticky no-border hidden-sm hidden-xs">&#032;</div> <!-- is used to stop the above stick menu -->

@section Scripts{
    <script type="text/javascript" src="js/jquery.stickit.js"></script>
    <script type="text/javascript" src="js/bootstrap-tokenfield.js"></script>
    <script type="text/javascript" src="js/typeahead.bundle.min.js"></script>
    <script type="text/javascript" src="js/jquery.sumogallery.js"></script>
    <script type="text/javascript" src="js/images-grid.js"></script>
    <script type="text/javascript" src="js/jquery.bootstrap-touchspin.js"></script>
    <script type="text/javascript" src="js/customs-detail.js"></script>

    <script type="text/javascript" src="js/moment.min.js"></script>
    <script type="text/javascript" src="js/jquery.daterangepicker.js"></script>
    <script type="text/javascript" src="js/customs-datepicker.js"></script>
    <script>
        $("#my-click").click(function () {
            var tripDateFrom = $("#tripDateFrom").val();
            var tripDateTo = $("#tripDateTo").val();
            var noTravellersVal = $("#noTravellers").val();

            $.ajax({
                    url: "/Tourist/Booking/GetNoTravellers",
                    type: "POST",
                    data: { tripDateFrom: tripDateFrom, tripDateTo: tripDateTo, noTravellers: noTravellersVal },
                    success: function (data) {
                        if (data.success)
                            location.href = `/booking?id=${@Model.TripDetail.TripId}`
                    }
            })

        })

    </script>

    <script>
        var stickyHeaders = (function () {
            var $window = $(window),
                $stickies;

            var load = function (stickies) {

                if (typeof stickies === "object" && stickies instanceof jQuery && stickies.length > 0) {

                    $stickies = stickies.each(function () {

                        var $thisSticky = $(this).wrap('<div class="followWrap" />');

                        $thisSticky
                            .data('originalPosition', $thisSticky.offset().top)
                            .data('originalHeight', $thisSticky.outerHeight())
                            .parent()
                            .height($thisSticky.outerHeight());
                    });

                    $window.off("scroll.stickies").on("scroll.stickies", function () {
                        _whenScrolling();
                    });
                }
            };

            var _whenScrolling = function () {

                $stickies.each(function (i) {

                    var $thisSticky = $(this),
                        $stickyPosition = $thisSticky.data('originalPosition');

                    if ($stickyPosition <= $window.scrollTop()) {

                        var $nextSticky = $stickies.eq(i + 1),
                            $nextStickyPosition = $nextSticky.data('originalPosition') - $thisSticky.data('originalHeight');

                        $thisSticky.addClass("fixed");

                        if ($nextSticky.length > 0 && $thisSticky.offset().top >= $nextStickyPosition) {

                            $thisSticky.addClass("absolute").css("top", $nextStickyPosition);
                        }

                    } else {

                        var $prevSticky = $stickies.eq(i - 1);

                        $thisSticky.removeClass("fixed");

                        if ($prevSticky.length > 0 && $window.scrollTop() <= $thisSticky.data('originalPosition') - $thisSticky.data('originalHeight')) {

                            $prevSticky.removeClass("absolute").removeAttr("style");
                        }
                    }
                });
            };

            return {
                load: load
            };
        })();

        $(function () {
            stickyHeaders.load($(".multiple-sticky"));
        });

        // Cache selectors
        var lastId,
            topMenu = $("#multiple-sticky-menu"),
            topMenuHeight = topMenu.outerHeight() + 80,
            // All list items
            menuItems = topMenu.find("a"),
            // Anchors corresponding to menu items
            scrollItems = menuItems.map(function () {
                var item = $($(this).attr("href"));
                if (item.length) { return item; }
            });

        // Bind click handler to menu items
        // so we can get a fancy scroll animation
        menuItems.click(function (e) {
            var href = $(this).attr("href"),
                offsetTop = href === "#" ? 0 : $(href).offset().top - 110;
            // offsetTop = href === "#" ? 0 : $(href).offset().top-topMenuHeight+1;
            $('html, body').stop().animate({
                scrollTop: offsetTop
            }, 300);
            e.preventDefault();
        });

        // Bind to scroll
        $(window).scroll(function () {
            // Get container scroll position
            var fromTop = $(this).scrollTop() + topMenuHeight;

            // Get id of current scroll item
            var cur = scrollItems.map(function () {
                if ($(this).offset().top < fromTop)
                    return this;
            });
            // Get the id of the current element
            cur = cur[cur.length - 1];
            var id = cur && cur.length ? cur[0].id : "";

            if (lastId !== id) {
                lastId = id;
                // Set/remove active class
                menuItems
                    .parent().removeClass("active")
                    .end().filter("[href='#" + id + "']").parent().addClass("active");
            }
        });

    </script>
    
    <script>
        /**
     * Image Grid with Lightbox
*/

        var y = {
            images: [],
            cells: 3,
            align: true
        }


        @for (int x = 0; x < Model.Galleries.Count(); x++)
            {
                <text>
                    y.images.push({ src: '@Model.Galleries.ToList()[x].URL', alt: 'Second image', caption: @(x+1) })
                </text>
            }

        //y.images.push({ src: 'images/diff-size/03.jpg', alt: 'Second image', caption: 3 })


        $('#gallery1').imagesGrid(y)

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $('#gallery-in-tab').imagesGrid(y);

            $('.selectpicker-in-tab').selectpicker({});
        });

        console.log($('#gallery1').imagesGrid())
    </script>
    
} 